using System.Threading.Tasks;
using Checkout.Payment.Api.Database;
using Checkout.Payment.Api.Mapper;
using Checkout.Payment.Api.Models;

namespace Checkout.Payment.Api.Repositories
{
    public interface IPaymentRepository
    {
        Task RecordPaymentAsync(PaymentCore payment);
    }

    public class PaymentRepository : IPaymentRepository
    {
        private readonly IPaymentDataMapper _mapper;
        private readonly PaymentContext _paymentContext;

        public PaymentRepository(IPaymentDataMapper mapper, PaymentContext paymentContext)
        {
            _mapper = mapper;
            _paymentContext = paymentContext;
        }

        public async Task RecordPaymentAsync(PaymentCore payment)
        {
            var paymentData = _mapper.Map(payment);

            await _paymentContext.Payments.AddAsync(paymentData);
            await _paymentContext.SaveChangesAsync();

            //this fields has default and autogenerated settings, So it will populate post DB update. Update referential and send back;
            payment.SetKeyAttributes(paymentData.Id, paymentData.DateModified);
        }
    }
}
